# Useful resource: https://github.com/actions/starter-workflows

name: Check Packages

on:
  pull_request
  # # https://help.github.com/en/articles/workflow-syntax-for-github-actions#onpushpull_requestpaths
  # # More helpful: https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  # push:
  #   branches:
  #     # If this isn't defined then all PR tests will be run twice
  #     - master
  #   paths:
  #     - '*'
  #     - '!*.md'
  # pull_request:
  #   paths:
  #     - '*'
  # - '!*.md'
  # - '/.github/*'
  # - '/packages/*'
  # - '/react-native-lab/*'
  # - '/tools/*'

jobs:
  test:
    name: Check Packages
    # strategy:
    #   matrix:
    #     # Run tests with all of these node versions/systems :]
    #     # node-version: [8.x, 10.x, 12.x]
    #     node-version: [10.x]
    #     # os: [ubuntu-latest, windows-latest, macOS-latest]
    #     os: [ubuntu-latest]
    # runs-on: ${{ matrix.os }}
    runs-on: macOS-10.14

    steps:
      - name: Install Nix
        run: curl https://nixos.org/releases/nix/nix-2.1.2/install | bash -s -- --no-daemon
      - name: Source Nix from Bash
        run: echo ". ~/.nix-profile/etc/profile.d/nix.sh" >> ~/.bash_profile
      - name: Install common packages
        # direnv: configures environment with .envrc files
        # findutils: where, find, etc. for expo-module test
        # git: circleci checkout steps
        # gnugrep: used in .envrc
        # gnutar: used by nix commands which download channels
        # gzip: used by nix commands which download channels
        # openssh: circleci checkout steps
        # rsync: expo-module-scripts uses to copy template files
        # xz: circleci checkout steps
        run: |
          nix-env -iA \
            nixpkgs.direnv \
            nixpkgs.findutils \
            nixpkgs.git \
            nixpkgs.gnugrep \
            nixpkgs.gnutar \
            nixpkgs.gzip \
            nixpkgs.openssh \
            nixpkgs.rsync \
            nixpkgs.xz
          mkdir -p ~/.config/direnv
          echo -e "[whitelist]\nprefix = [ \"$HOME\" ]" > ~/.config/direnv/config.toml
          echo 'eval "$(direnv export bash)"' >> ~/.bash_profile
          echo '--frozen-lockfile true' >> ~/.yarnrc
      - uses: actions/checkout@v1
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}
      - name: Update submodules
        run: git submodule update --init
      - run: yarn
        env:
          CI: true
      - name: Check packages
        run: expotools check-packages
        env:
          LANG: en_US.UTF-8
          FASTLANE_SKIP_UPDATE_CHECK: 1
          FASTLANE_DISABLE_COLORS: 1
          CI: true
