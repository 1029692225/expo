{"version":3,"file":"ExpoTaskManager.js","sourceRoot":"","sources":["../src/ExpoTaskManager.ts"],"names":[],"mappings":"AAEA,eAAe;IACb,IAAI,IAAI;QACN,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IACD,IAAI,UAAU;QACZ,OAAO,yBAAyB,CAAC;IACnC,CAAC;IACD,WAAW,KAAI,CAAC;IAChB,eAAe,KAAI,CAAC;IACpB,KAAK,CAAC,qBAAqB,CAAC,QAAgB;QAC1C,OAAO,KAAK,CAAC;IACf,CAAC;IACD,KAAK,CAAC,uBAAuB;QAC3B,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,mBAAmB,EAAE,IAAoD;IACzE,mBAAmB,EAAE,IAAoD;IACzE,uBAAuB,EAAE,IAAoC;IAC7D,uBAAuB,EAAE,IAE2D;CACrF,CAAC","sourcesContent":["import { TaskManagerTask } from './TaskManager.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoTaskManager';\n  },\n  get EVENT_NAME(): string {\n    return 'TaskManager.executeTask';\n  },\n  addListener() {},\n  removeListeners() {},\n  async isTaskRegisteredAsync(taskName: string): Promise<boolean> {\n    return false;\n  },\n  async getRegisteredTasksAsync(): Promise<TaskManagerTask[]> {\n    return [];\n  },\n  unregisterTaskAsync: null as null | ((taskName: string) => Promise<void>),\n  getTaskOptionsAsync: null as null | (<T>(taskName: string) => Promise<T>),\n  unregisterAllTasksAsync: null as null | (() => Promise<void>),\n  notifyTaskFinishedAsync: null as\n    | null\n    | ((taskName: string, options: { eventId: string; result: any }) => Promise<void>),\n};\n"]}