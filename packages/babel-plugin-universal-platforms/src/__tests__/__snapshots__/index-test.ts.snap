// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Platform.OS is converted to a static value for Terser 1`] = `"const value = \\"ios\\";"`;

exports[`Platform.select leaves Platform.select if the matching platform's value is a method 1`] = `
"const value = Platform.select({
  android() {}

});"
`;

exports[`Platform.select removes unmatched platforms but leaves Platform.select if other platforms may match at runtime 1`] = `
"const defaults = {
  default: 'default'
};
const value = Platform.select({ ...defaults
});"
`;

exports[`Platform.select removes unmatched platforms but leaves Platform.select with indeterminate platforms 1`] = `
"const value = Platform.select({
  ['andr' + 'oid']: () => {}
});"
`;

exports[`Platform.select removes unmatched platforms but leaves Platform.select with indeterminate platforms and the default case 1`] = `
"const value = Platform.select({
  default: 'default',

  ['w' + 'eb']() {}

});"
`;

exports[`Platform.select replaces Platform.select with the default value if no platform matches 1`] = `
"const value = {
  test: true
};"
`;

exports[`Platform.select replaces Platform.select with the value for the matching platform 1`] = `
"const defaults = {
  default: 'default'
};

const value = () => {};"
`;

exports[`if statements only saves Android code 1`] = `
"{
  console.log('Android');
}"
`;

exports[`if statements only saves custom code 1`] = `
"{
  console.log('and beyond');
}"
`;

exports[`if statements only saves iOS code 1`] = `
"{
  console.log('iOS');
}"
`;

exports[`if statements only saves web code 1`] = `
"{
  console.log('web');
}"
`;

exports[`removes __DEV__ and process.env.NODE_ENV 1`] = `
"{
  console.log(\\"DEV MODE\\");
}
{
  console.log(\\"DEV MODE\\");
}"
`;
