{"version":3,"file":"View.js","sourceRoot":"","sources":["../../src/primitives/View.tsx"],"names":[],"mappings":"AAQA,OAAO,EAGL,IAAI,IAAI,UAAU,GAEnB,MAAM,cAAc,CAAC;AA8EtB,MAAM,IAAI,GAAG,UAAsC,CAAC;AAEpD,eAAe,IAAI,CAAC","sourcesContent":["import {\n  AnimationStyles,\n  GridStyles,\n  InteractionStyles,\n  TransformStyles,\n  TransitionStyles,\n} from 'expo-style-sheet';\nimport { ClassAttributes, ComponentProps, ComponentType } from 'react';\nimport {\n  AccessibilityRole,\n  StyleProp,\n  View as NativeView,\n  ViewStyle as NativeViewStyle,\n} from 'react-native';\n\ntype NativeViewProps = ComponentProps<typeof NativeView> & ClassAttributes<typeof NativeView>;\n\n/**\n * https://baconbrix.gitbook.io/react-native-web/primitives/view\n */\nexport interface WebViewStyle {\n  /** @platform web */\n  backdropFilter?: string;\n  /** @platform web */\n  backgroundAttachment?: string;\n  /** @platform web */\n  backgroundBlendMode?: string;\n  /** @platform web */\n  backgroundClip?: string;\n  /** @platform web */\n  backgroundImage?: string;\n  /** @platform web */\n  backgroundOrigin?: 'border-box' | 'content-box' | 'padding-box';\n  /** @platform web */\n  backgroundPosition?: string;\n  /** @platform web */\n  backgroundRepeat?: string;\n  /** @platform web */\n  backgroundSize?: string;\n  /** @platform web */\n  boxShadow?: string;\n  /** @platform web */\n  boxSizing?: string;\n  /** @platform web */\n  clip?: string;\n  /** @platform web */\n  filter?: string;\n  /** @platform web */\n  outline?: string;\n  /** @platform web */\n  outlineColor?: string;\n  /** @platform web */\n  overflowX?: string;\n  /** @platform web */\n  overflowY?: string;\n  /** @platform web */\n  overscrollBehavior?: 'auto' | 'contain' | 'none';\n  /** @platform web */\n  overscrollBehaviorX?: 'auto' | 'contain' | 'none';\n  /** @platform web */\n  overscrollBehaviorY?: 'auto' | 'contain' | 'none';\n  /** @platform web */\n  visibility?: string;\n}\n\nexport type ViewStyle = NativeViewStyle &\n  WebViewStyle &\n  AnimationStyles &\n  TransitionStyles &\n  InteractionStyles &\n  GridStyles &\n  TransformStyles;\n\nexport type WebViewProps = {\n  style?: StyleProp<ViewStyle>;\n\n  accessibilityRole?:\n    | 'list'\n    | 'listitem'\n    | 'complementary'\n    | 'contentinfo'\n    | 'region'\n    | 'navigation'\n    | 'main'\n    | 'article'\n    | 'banner'\n    | AccessibilityRole;\n};\n\nexport type ViewProps = WebViewProps & Omit<NativeViewProps, 'style' | 'accessibilityRole'>;\n\nconst View = NativeView as ComponentType<ViewProps>;\n\nexport default View;\n"]}