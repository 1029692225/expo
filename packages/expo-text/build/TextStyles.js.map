{"version":3,"file":"TextStyles.js","sourceRoot":"","sources":["../src/TextStyles.ts"],"names":[],"mappings":"","sourcesContent":["/***\n * Copyright (c) Expo team.\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport {\n  AnimationStyles,\n  GridStyles,\n  InteractionStyles,\n  TransformStyles,\n  TransitionStyles,\n} from 'expo-style-sheet';\nimport { TextStyle as NativeTextStyle } from 'react-native';\n\ntype StringOrNumber = string | number;\n\nexport type TextOverflow = string | 'each-line' | 'hanging';\n\nexport type FontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport type TextRendering = 'auto' | 'geometricPrecision' | 'optimizeLegibility' | 'optimizeSpeed';\n\nexport type UnicodeBidi =\n  | 'normal'\n  | 'bidi-override'\n  | 'embed'\n  | 'isolate'\n  | 'isolate-override'\n  | 'plaintext';\n\nexport type WhiteSpace = string | 'overflow-wrap' | 'word-break' | 'hyphens';\n\nexport type WordBreak = string | 'normal' | 'break-all' | 'break-word' | 'keep-all';\n\nexport type WordWrap = 'normal' | 'anywhere' | 'break-word';\n\nexport type FontVariant =\n  | 'small-caps'\n  | 'oldstyle-nums'\n  | 'lining-nums'\n  | 'tabular-nums'\n  | 'proportional-nums';\n\nexport type TextTransform =\n  | 'uppercase'\n  | 'lowercase'\n  | 'none'\n  | 'capitalize'\n  // web only\n  | 'full-width'\n  | 'full-size-kana';\n\nexport interface WebTextStyle {\n  position?: 'absolute' | 'fixed' | 'relative' | 'static' | 'sticky';\n  /**\n   *\n   */\n  fontWeight?: FontWeight;\n  /**\n   *\n   */\n  fontVariant?: FontVariant;\n  /**\n   * Set the size of the text font in pixels. String is only available on web.\n   *\n   * @default 12\n   */\n  fontSize?: NativeTextStyle['fontSize'] | string;\n  /**\n   * The height of a \"line box\". Commonly used to set the vertical distance between lines of text.\n   * String is only available on web\n   */\n  lineHeight?: NativeTextStyle['lineHeight'] | string;\n  /**\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/font-feature-settings\n   * @platform web\n   */\n  fontFeatureSettings?: StringOrNumber | StringOrNumber[];\n  /**\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform\n   * @platform web\n   */\n  textTransform?: TextTransform;\n  /**\n   * Sets the length of empty space (indentation) that is put before lines of text in a block.\n   *\n   * @platform web\n   */\n  textIndent?: StringOrNumber;\n  /**\n   * @platform web\n   */\n  textOverflow?: TextOverflow | TextOverflow[];\n  /**\n   * Provides information to the rendering engine about what to optimize for when rendering text.\n   * The browser makes trade-offs among speed, legibility, and geometric precision.\n   *\n   * @platform web\n   */\n  textRendering?: TextRendering;\n  /**\n   * Together with the `direction` property, determines how bidirectional text in a document is handled.\n   * For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text.\n   * The `unicodeBidi` property overrides this algorithm and allows the developer to control the text embedding.\n   *\n   * @platform web\n   */\n  unicodeBidi?: UnicodeBidi;\n  /**\n   * Sets how [white space](https://developer.mozilla.org/en-US/docs/Glossary/whitespace) inside an element is handled.\n   *\n   * @platform web\n   */\n  whiteSpace?: WhiteSpace;\n  /**\n   * Sets whether line breaks appear wherever the text would otherwise overflow its content box.\n   *\n   * @platform web\n   */\n  wordBreak?: WordBreak;\n  /**\n   * Applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n   *\n   * > In CSS `word-wrap` is also known as `overflow-wrap`.\n   *\n   * @platform web\n   */\n  wordWrap?: WordWrap;\n  /**\n   * @platform web\n   */\n  MozOsxFontSmoothing?: string;\n  /**\n   * @platform web\n   */\n  WebkitFontSmoothing?: string;\n}\n\nexport type TextStyle = Omit<\n  NativeTextStyle,\n  'transform' | 'position' | 'fontSize' | 'fontWeight' | 'fontVariant' | 'lineHeight'\n> &\n  WebTextStyle &\n  AnimationStyles &\n  TransitionStyles &\n  InteractionStyles &\n  GridStyles &\n  TransformStyles;\n"]}