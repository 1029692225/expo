{"version":3,"file":"AuthProvider.js","sourceRoot":"","sources":["../../src/providers/AuthProvider.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,OAAO,OAAO,YAAY;IAM/B,YAAY,UAAkB;QAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS;QACP,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,IAAU;QACf,wBAAwB;IAC1B,CAAC;;AAvBM,wBAAW,GAAG,SAAS,CAAC;AA0BjC;;;;;;;;;;IAUI","sourcesContent":["import { Auth } from './types';\n\nexport default class AuthProvider {\n  static PROVIDER_ID = 'unknown';\n\n  readonly providerId: string;\n  readonly scopes: string[];\n\n  constructor(providerId: string) {\n    this.providerId = providerId;\n    this.scopes = [];\n  }\n\n  addScope(scope: string): AuthProvider {\n    if (this.scopes.indexOf(scope) < 0) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n\n  signIn(auth: Auth) {\n    // override to implement\n  }\n}\n\n/*fireauth.idp.ProviderId = {\n  ANONYMOUS: 'anonymous',\n  CUSTOM: 'custom',\n  FACEBOOK: 'facebook.com',\n  FIREBASE: 'firebase',\n  GITHUB: 'github.com',\n  GOOGLE: 'google.com',\n  PASSWORD: 'password',\n  PHONE: 'phone',\n  TWITTER: 'twitter.com',\n};*/\n"]}