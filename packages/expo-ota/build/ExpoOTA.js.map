{"version":3,"file":"ExpoOTA.js","sourceRoot":"","sources":["../src/ExpoOTA.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAC3E,MAAM,GAAG,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAEvC,MAAM,CAAC,KAAK,UAAU,mBAAmB;IACrC,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE;QAC1B,MAAM,IAAI,mBAAmB,CAAC,YAAY,EAAE,qBAAqB,CAAC,CAAC;KACtE;IACD,OAAO,GAAG,CAAC,mBAAmB,EAAE,CAAC;AACrC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,iBAAiB;IACnC,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE;QACxB,MAAM,IAAI,mBAAmB,CAAC,YAAY,EAAE,sCAAsC,CAAC,CAAC;KACvF;IACD,OAAO,GAAG,CAAC,iBAAiB,EAAE,CAAC;AACnC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,MAAM;IACxB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;QACb,MAAM,IAAI,mBAAmB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;KACzD;IACD,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;AACxB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,qBAAqB;IACvC,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE;QAC5B,MAAM,IAAI,mBAAmB,CAAC,YAAY,EAAE,uBAAuB,CAAC,CAAC;KACxE;IACD,OAAO,GAAG,CAAC,qBAAqB,EAAE,CAAC;AACvC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,wBAAwB;IAC1C,IAAI,CAAC,GAAG,CAAC,wBAAwB,EAAE;QAC/B,MAAM,IAAI,mBAAmB,CAAC,YAAY,EAAE,sCAAsC,CAAC,CAAC;KACvF;IACD,OAAO,GAAG,CAAC,wBAAwB,EAAE,CAAC;AAC1C,CAAC","sourcesContent":["import { NativeModulesProxy, UnavailabilityError } from '@unimodules/core';\nconst OTA = NativeModulesProxy.ExpoOta;\n\nexport async function checkForUpdateAsync() {\n    if (!OTA.checkForUpdateAsync) {\n        throw new UnavailabilityError('WebBrowser', 'checkForUpdateAsync');\n    }\n    return OTA.checkForUpdateAsync();\n}\n\nexport async function fetchUpdatesAsync() {\n    if (!OTA.fetchUpdatesAsync) {\n        throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n    }\n    return OTA.fetchUpdatesAsync();\n}\n\nexport async function reload() {\n    if (!OTA.reload) {\n        throw new UnavailabilityError('WebBrowser', 'reload');\n    }\n    return OTA.reload();\n}\n\nexport async function clearUpdateCacheAsync() {\n    if (!OTA.clearUpdateCacheAsync) {\n        throw new UnavailabilityError('WebBrowser', 'clearUpdateCacheAsync');\n    }\n    return OTA.clearUpdateCacheAsync();\n}\n\nexport async function readCurrentManifestAsync() {\n    if (!OTA.readCurrentManifestAsync) {\n        throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n    }\n    return OTA.readCurrentManifestAsync();\n}\n"]}