{"version":3,"file":"Cellular.js","sourceRoot":"","sources":["../src/Cellular.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAEvD,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAG1C,MAAM,CAAC,MAAM,UAAU,GAAG,YAAY;IACpC,CAAC,CAAC,YAAY,CAAC,UAAU;QACvB,CAAC,CAAC,YAAY,CAAC,UAAU;QACzB,CAAC,CAAC,IAAI;IACR,CAAC,CAAC,IAAI,CAAC;AACT,MAAM,CAAC,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAClG,MAAM,CAAC,MAAM,cAAc,GAAG,YAAY;IACxC,CAAC,CAAC,YAAY,CAAC,cAAc;QAC3B,CAAC,CAAC,YAAY,CAAC,cAAc;QAC7B,CAAC,CAAC,IAAI;IACR,CAAC,CAAC,IAAI,CAAC;AACT,MAAM,CAAC,MAAM,iBAAiB,GAAG,YAAY;IAC3C,CAAC,CAAC,YAAY,CAAC,iBAAiB;QAC9B,CAAC,CAAC,YAAY,CAAC,iBAAiB;QAChC,CAAC,CAAC,IAAI;IACR,CAAC,CAAC,IAAI,CAAC;AACT,MAAM,CAAC,MAAM,iBAAiB,GAAG,YAAY;IAC3C,CAAC,CAAC,YAAY,CAAC,iBAAiB;QAC9B,CAAC,CAAC,YAAY,CAAC,iBAAiB;QAChC,CAAC,CAAC,IAAI;IACR,CAAC,CAAC,IAAI,CAAC;AAET,MAAM,CAAC,KAAK,UAAU,0BAA0B;IAC9C,IAAI,CAAC,YAAY,CAAC,0BAA0B,EAAE;QAC5C,MAAM,IAAI,mBAAmB,CAAC,eAAe,EAAE,4BAA4B,CAAC,CAAC;KAC9E;IACD,OAAO,MAAM,YAAY,CAAC,0BAA0B,EAAE,CAAC;AACzD,CAAC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExpoCellular from './ExpoCellular';\nimport { CellularGeneration } from './Cellular.types';\n\nexport const allowsVoip = ExpoCellular\n  ? ExpoCellular.allowsVoip\n    ? ExpoCellular.allowsVoip\n    : null\n  : null;\nexport const carrier = ExpoCellular ? (ExpoCellular.carrier ? ExpoCellular.carrier : null) : null;\nexport const isoCountryCode = ExpoCellular\n  ? ExpoCellular.isoCountryCode\n    ? ExpoCellular.isoCountryCode\n    : null\n  : null;\nexport const mobileCountryCode = ExpoCellular\n  ? ExpoCellular.mobileCountryCode\n    ? ExpoCellular.mobileCountryCode\n    : null\n  : null;\nexport const mobileNetworkCode = ExpoCellular\n  ? ExpoCellular.mobileNetworkCode\n    ? ExpoCellular.mobileNetworkCode\n    : null\n  : null;\n\nexport async function getCellularGenerationAsync(): Promise<CellularGeneration> {\n  if (!ExpoCellular.getCellularGenerationAsync) {\n    throw new UnavailabilityError('expo-cellular', 'getCellularGenerationAsync');\n  }\n  return await ExpoCellular.getCellularGenerationAsync();\n}\n"]}