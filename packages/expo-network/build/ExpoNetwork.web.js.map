{"version":3,"file":"ExpoNetwork.web.js","sourceRoot":"","sources":["../src/ExpoNetwork.web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEjE,eAAe;IACb,KAAK,CAAC,iBAAiB;QACrB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,KAAK,CAAC,mCAAmC,CAAC;iBACvC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACX,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;oBACxB,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;iBACD,KAAK,CAAC,GAAG,CAAC,EAAE;gBACX,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IACD,KAAK,CAAC,oBAAoB;QACxB,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;QAC/E,IAAI,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;QACnC,IAAI,mBAAmB,GAAG,WAAW,CAAC;QACtC,OAAO;YACL,IAAI;YACJ,WAAW;YACX,mBAAmB;SACpB,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { NetworkState, NetworkStateType } from './Network.types';\n\nexport default {\n  async getIpAddressAsync(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fetch('https://api.ipify.org?format=json')\n        .then(data => {\n          data.json().then(result => {\n            resolve(result.ip);\n          });\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  },\n  async getNetworkStateAsync(): Promise<NetworkState> {\n    let type = navigator.onLine ? NetworkStateType.UNKNOWN : NetworkStateType.NONE;\n    let isConnected = navigator.onLine;\n    let isInternetReachable = isConnected;\n    return {\n      type,\n      isConnected,\n      isInternetReachable,\n    };\n  },\n};\n"]}