{"version":3,"file":"ExpoDevice.web.js","sourceRoot":"","sources":["../src/ExpoDevice.web.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,cAAc,CAAC;AAEpC,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACxD,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAEhC,eAAe;IACb,IAAI,IAAI;QACN,OAAO,YAAY,CAAC;IACtB,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,SAAS;QACX,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAC7B,CAAC;IACD,IAAI,YAAY;QACd,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;IAC9B,CAAC;IACD,IAAI,MAAM;QACR,OAAO,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC;IACxB,CAAC;IACD,IAAI,SAAS;QACX,OAAO,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC;IAC3B,CAAC;IACD,IAAI,yBAAyB;QAC3B,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC;IACjC,CAAC;CACF,CAAC","sourcesContent":["import UAParser from 'ua-parser-js';\n\nconst parser = new UAParser(window.navigator.userAgent);\nvar result = parser.getResult();\n\nexport default {\n  get name(): string {\n    return 'ExpoDevice';\n  },\n  get isDevice(): boolean {\n    return true;\n  },\n  get modelName(): string {\n    return result.device.model;\n  },\n  get manufacturer(): string {\n    return result.device.vendor;\n  },\n  get osName(): string {\n    return result.os.name;\n  },\n  get osVersion(): string {\n    return result.os.version;\n  },\n  get supportedCpuArchitectures(): string[] {\n    return result.cpu.architecture;\n  }\n};\n"]}